import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.Scanner;

public class EstadisticasArray {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        System.out.print("Ingrese el tamaño del arreglo: ");
        int tamaño = scanner.nextInt();
        int[] arreglo = new int[tamaño];
        
        for (int i = 0; i < tamaño; i++) {
            arreglo[i] = random.nextInt(101);
        }
        
        System.out.println("Arreglo generado: " + Arrays.toString(arreglo));
        
        double media = calcularMedia(arreglo);
        System.out.println("Media: " + media);
        
        double mediana = calcularMediana(arreglo);
        System.out.println("Mediana: " + mediana);
        
        double varianza = calcularVarianza(arreglo, media);
        System.out.println("Varianza: " + varianza);
        
        double desviacionEstandar = Math.sqrt(varianza);
        System.out.println("Desviación estándar: " + desviacionEstandar);
        
        int moda = calcularModa(arreglo);
        System.out.println("Moda: " + moda);
        
        scanner.close();
    }
    
    public static double calcularMedia(int[] arreglo) {
        double suma = 0;
        for (int num : arreglo) {
            suma += num;
        }
        return suma / arreglo.length;
    }
    
    public static double calcularMediana(int[] arreglo) {
        Arrays.sort(arreglo);
        int longitud = arreglo.length;
        if (longitud % 2 == 0) {
            return (arreglo[longitud / 2 - 1] + arreglo[longitud / 2]) / 2.0;
        } else {
            return arreglo[longitud / 2];
        }
    }
    
    public static double calcularVarianza(int[] arreglo, double media) {
        double sumaCuadrados = 0;
        for (int num : arreglo) {
            sumaCuadrados += Math.pow(num - media, 2);
        }
        return sumaCuadrados / arreglo.length;
    }
    
    public static int calcularModa(int[] arreglo) {
        Map<Integer, Integer> frecuencia = new HashMap<>();
        for (int num : arreglo) {
            frecuencia.put(num, frecuencia.getOrDefault(num, 0) + 1);
        }
        
        int moda = arreglo[0];
        int maxFrecuencia = 0;
        for (Map.Entry<Integer, Integer> entrada : frecuencia.entrySet()) {
            if (entrada.getValue() > maxFrecuencia) {
                maxFrecuencia = entrada.getValue();
                moda = entrada.getKey();
            }
        }
        return moda;
    }
}
